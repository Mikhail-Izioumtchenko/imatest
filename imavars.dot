EXPORT='export'

$EXPORT IMASRCDIR="${IMASRCDIR:-`pwd`}"
[ -f "$IMASRCDIR/imavars.dot" ] || {
    echo "internal error: wrong IMASRCDIR=$IMASRCDIR in env, no IMASRCDIR/imavars.dot found"
    exit 1
}
$EXPORT IMATMPDIR="${IMATMPDIR:-/tmp}"

DEVTTY='/dev/tty'

AWK="${AWK:-/bin/awk}"
BASENAME="${BASENAME:-/bin/basename}"
$EXPORT CAT="${CAT:-/bin/cat}"
CMP="${CMP:-/bin/cmp}"
CP="${CP:-/bin/cp}"
DATE="${DATE:-/bin/date}"
DIRNAME="${DIRNAME:-/bin/dirname}"
DF="${DF:-/bin/df}"
DU="${DU:-/bin/du}"
ECHO="${ECHO:-/bin/echo -e}"
EVAL="${EVAL:-eval}"
EXEC="${EXEC:-exec}"
EXIT="${EXIT:-exit}"
EXPR="${EXPR:-/bin/expr}"
FIND="${FIND:-/bin/find}"
GREP="${GREP:-/bin/grep -E}"
KILL="${KILL:-/bin/kill}"
LESS="${LESS:-/bin/less}"
LS="${LS:-/bin/ls}"
MKDIR="${MKDIR:-/bin/mkdir -pv}"
MOUNT="${MOUNT:-/bin/mount}"
MV="${MV:-/bin/mv}"
OD="${OD:-/bin/od}"
$EXPORT PERL="${PERL:-/bin/perl}"
PS="${PS:-/bin/ps}"
READ="${READ:-read}"
RM="${RM:-/bin/rm -v}"
SED="${SED:-/bin/sed -E}"
SLEEP="${SLEEP:-/bin/sleep}"
SORT="${SORT:-/bin/sort}"
TAIL="${TAIL:-/bin/tail}"
TEE="${TEE:-/bin/tee}"
$EXPORT TOUCH="${TOUCH:-/bin/touch}"
TR="${TR:-/bin/tr}"
TRUE="${TRUE:-/bin/true}"
UMOUNT="${UMOUNT:-/bin/umount}"
UNIQ="${UNIQ:-/bin/uniq}"
WC="${WC:-/bin/wc}"

DEVNULL="${DEVNULL:-/dev/null}"

$EXPORT MYSQL="${MYSQL:-/bin/mysql}"
# no absolute pathname is important for sandboxes
$EXPORT MYSQLD="${MYSQLD:-mysqld}"
$EXPORT MYSQLD_ORIG="${MYSQLD_ORIG:-/sbin/mysqld}"
$EXPORT MYSQLD_DEBUG="${MYSQLD_DEBUG:-/sbin/mysqld-debug}"
$EXPORT MYSQLROUTER="${MYSQLROUTER:-/bin/mysqlrouter}"
[ "$_IMATEST_USE" = '8.3' ] && $EXPORT MYSQLSH="${MYSQLSH:-/hardtmp/mysqlsh-8.3/mysqlsh.cover.sh}" || $EXPORT MYSQLSH="${MYSQLSH:-mysqlsh}"
$EXPORT ROUTERDIR="${ROUTERDIR:=/root/mysqlrouter}"
$EXPORT SANDBOXDIR="/root/mysql-sandboxes"

CMAKE="${CMAKE:-/bin/cmake}"
MAKE="${MAKE:-/bin/make}"

$EXPORT IMAPAS="${IMAPAS:-${IMASRCDIR}/imapas.dot}"
$EXPORT IMAROOT="${IMAROOT:-root}"

IMACLUNAME="${IMACLUNAME:-imaclu}"
IMACLUREPBASE="${IMACLUREPBASE:-imaclurep}"
IMACLUSETNAME="${IMACLUSETNAME:-imacluset}"
IMAREPSETNAME="${IMAREPSETNAME:-imarepset}"
IMAPORTBASE="${IMAPORTBASE:-4200}"
IMAPORTMXBASE="${IMAPORTMXBASE:-4300}"
$EXPORT IMABASCHEMA="${IMABASCHEMA:-imaschema}"
$EXPORT IMABATABLE="${IMABATABLE:-imatable}"
$EXPORT IMABASTRUCT="${IMABASTRUCT:-i INTEGER PRIMARY KEY}"
$EXPORT IMABAVALUES="${IMABAVALUES:-42}"
IMAUSER="${IMAUSER:-root}"

$EXPORT IMACHECKMANY="${IMACHECKMANY:-$IMASRCDIR/checkms.sh}"
IMACHECKONE="${IMACHECKONE:-$IMASRCDIR/check1sa.sh}"
IMACLUADDMANY="${IMACLUADDMANY:-$IMASRCDIR/cluaddms.sh}"
IMACLUCREATE="${IMACLUCREATE:-$IMASRCDIR/createclu.sh}"
IMAREPSETADDMANY="${IMAREPSETADDMANY:-$IMASRCDIR/repsetaddms.sh}"
IMACREATEONE="${IMACREATEONE:-$IMASRCDIR/create1sa.sh}"
$EXPORT IMACREATEMANY="${IMACREATEMANY:-$IMASRCDIR/createms.sh}"
$EXPORT IMADESTROYMANY="${IMADESTROYMANY:-$IMASRCDIR/destroyms.sh}"
IMADESTROYONE="${IMADESTROYONE:-$IMASRCDIR/destroy1sa.sh}"
IMAHAKILLONE="${IMAHAKILLONE:-$IMASRCDIR/hakill1sa.sh}"
$EXPORT IMAHAKILLMANY="${IMAHAKILLMANY:-$IMASRCDIR/hakillms.sh}"
IMAINITMANY="${IMAINITMANY:-$IMASRCDIR/initms.sh}"
$EXPORT IMAINITONE="${IMAINITONE:-$IMASRCDIR/init1sa.sh}"
$EXPORT IMAKILLMANY="${IMAKILLMANY:-$IMASRCDIR/killms.sh}"
IMAKILLONE="${IMAKILLONE:-$IMASRCDIR/kill1sa.sh}"
IMAREBOOTCLU="${IMAREBOOTCLU:-$IMASRCDIR/rebootclu.sh}"
IMASHOWALL="${IMASHOWALL:-$IMASRCDIR/showall.sh}"
IMASHOWMANY="${IMASHOWMANY:-$IMASRCDIR/showms.sh}"
IMASHOWONE="${IMASHOWONE:-$IMASRCDIR/show1sa.sh}"
$EXPORT IMASTARTMANY="${IMASTARTMANY:-$IMASRCDIR/startms.sh}"
IMASTARTONE="${IMASTARTONE:-$IMASRCDIR/start1sa.sh}"
STARTROUTER="$_ROUTERDIR/start.sh"
$EXPORT IMASTOPMANY="${IMASTOPMANY:-$IMASRCDIR/stopms.sh}"
IMASTOPONE="${IMASTOPONE:-$IMASRCDIR/stop1sa.sh}"
IMAWAITMANY="${IMAWAITMANY:-$IMASRCDIR/waitms.sh}"
IMAWAITONE="${IMAWAITONE:-$IMASRCDIR/wait1sa.sh}"

### 3,4-5 to ' 3 4 5 '
function ima_tolist() {
  _tolist_rc=''
  _tolist_s="$1"
  _tolist_mor=`$ECHO "$_tolist_s" | $SED 's/,/ /g'`
  for _tolist_sub in $_tolist_mor ; do
    _tolist_nom=`$ECHO "$_tolist_sub" | $SED 's/-/ /g'`
    [ "$_tolist_sub" = "$_tolist_nom" ] && {
      _tolist_rc="$_tolist_rc $_tolist_sub"
      continue
    }
    _tolist_st=`$ECHO "$_tolist_nom" | $SED 's/ *([^ ]+).*/\1/'`
    _tolist_end=`$ECHO "$_tolist_nom" | $SED 's/.* +([^ ]+)/\1/'`
    _tolist_mor=''
    _tolist_num="$_tolist_st"
    while [ "$_tolist_num" -le "$_tolist_end" ] ; do
      _tolist_mor="$_tolist_mor $_tolist_num"
      _tolist_num=$(($_tolist_num + 1))
    done 
    _tolist_rc="$_tolist_rc $_tolist_mor"
  done
  _tolist_rc="`$ECHO \" $_tolist_rc \" | $SED 's/  */ /g'`"
  $ECHO "$_tolist_rc"
}

### prefix message with timestamp
### expects mostly one line messages so replaces newlines with \n
function ima_say() {
  _ts=`$DATE -u +%Y%m%d%H%M%S.%N`
  $ECHO "#S $$ $_ts $@" | $AWK '{printf("%s\\n",$0)}' | $SED 's/\\n$//'
  $ECHO ''
}

### show commented out file contents
### 1: script name
### 2: file name
function ima_file() {
  _me="$1"
  _fil="$2"
  ima_say "$me : start contents (commented out) of file $_fil :"
  $CAT "$_fil" | $SED 's/^/#F /'
  ima_say "$me : end contents (commented out) of file $_fil :"
}

### read input and output it prefixed and commented
### 1: script name
function ima_report() {
  me="$1"
  while $READ _lin ; do
    ima_say "$me : $_lin"
  done
}
