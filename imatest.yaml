---
create_db: yes
port_writer: 2
schemas: 4
tables_per_schema: 19
tables_per_schema: 4
#destructive_thread_out: qw(/dev/null)
#destructive_thread_err: qw(/dev/null)
#load_thread_out: qw(/dev/null)
#load_thread_err: qw(/dev/null)
txn_use: yes
load_thread_sql: qw(/dev/null)
# heavy START
load_threads: 9Xb2,17
server_terminate: yes
test_duration_seconds: 1800
load_thread_restart: yes
# heavy END
# light START
load_threads: 1
server_terminate: no
test_duration_seconds: 180
load_thread_restart: no
# light END
load_max_stmt: 000
report_every_stmt: 10000
report_every_seconds: 60
rediscover_every_seconds: 60-70
# 0 means no check thread
check_thread_ports: 2
check_thread_sleep: 10
#load_thread_random_seeds: 817250,102580
load_thread_random_seeds: 0
destructive_thread_random_seeds: 0
sleep_final: 30
sleep_on_assert: 6
terminate_on_assert: yes
load_sql_class: lock_instance_for_backup:0.0001,unlock_instance:0.001,insert:0.5,show_open_tables:0.01,show_parse_tree:0.01,drop_table:0.001,alter:0.1,create_table:0.001,analyze:0.1,optimize:0.01,checksum:0.01,replace:0.1,insel:0.2,update:0.8,delete:0.1,check:0.05,select #debug
load_sql_class_k_b2: insert:0.1,insel:0.1,replace:0.1,update:0.1,delete:0.001,check:0.01,alter:0.1,select,lock_instance_for_backup:0.0001,unlock_instance:0.0001 #debug
destructive_threads: 1Xb2,1
destructive_threads: 1
server_termination_how: shutdown:0.01,shutkill:0.1,kill:0.1,sigkill:0.99,sigstop
server_termination_how_k_b2: sigkill
server_termination_every_seconds: 120-480:0.5,540-600
server_termination_every_seconds_k_b2: 300-360
ports_destructive_how_many: 1
ports_destructive: 2
#ports_destructive_k_b2: 3
destructive_thread_sleep: 5
port_load: 2
#port_load_k_b2: 3

missing_probability_replacement: 0.01

# 
define: &functions_character CONCAT(@SELF;@COL_character),CONCAT(@SELF;@SELF),PI(),NOW(),ASCII(@COL_integer),ASCII(@SELF),HEX(@COL_lob),HEX(@SELF),BIN(@COL),BIT_LENGTH(@COL),BIT_LENGTH(@SELF),CHAR(@COL),CHAR_LENGTH(@SELF),CHAR_LENGTH(@COL),CHARSET(@COL_character),CHARSET(@COL_text),COERCIBILITY(@COL),COLLATION(@COL),CONCAT_WS(@SELF;@SELF;@SELF),CONNECTION_ID(),CONVERT(@SELF USING utf8mb4),CONV(@COL_numeric;10;16),CURTIME(),CURRENT_TIME,CURRENT_USER,CURRENT_USER(),CURRENT_TIMESTAMP,CURRENT_TIMESTAMP(),CURRENT_DATE,CURRENT_DATE(),CURRENT_ROLE(),CRC32(@SELF),CRC32(@COL),DATEDIFF(@COL_datetime;@COL_datetime),DATE_FORMAT(@COL_datetime;"%a"),DATE_FORMAT(@COL_datetime;@COL),DAY(@COL_datetime),DATE(@COL_datetime),DATABASE(),DAYOFYEAR(@COL_datetime),DAYOFWEEK(@COL_datetime),DAYOFMONTH(@COL_datetime),DIV(@COL_numeric;@COL_numeric),DEGREES(@COL_numeric),DEFAULT(@COL),ExtractValue(@COL_character;@COL_character),EXTRACT(MICROSECOND FROM @COL_timestamp),EXPORT_SET(@COL_integer;@COL_character;@COL_character;@COL_character;@COL_numeric),EXP(@COL_numeric),ELT(@COL_smallint;@COL_character;@COL_character),FIELD(@COL_character;@COL_character;@COL_character),FIND_IN_SET(@SELF;@SELF),FLOOR(@COL_numeric),FORMAT(@COL_numeric;@COL_numeric),FORMAT_BYTES(@COL_numeric),FORMAT_PICO_TIME(@COL_datetime),FROM_DAYS(@COL_numeric),FROM_UNIXTIME(@COL_numeric),GET_FORMAT(DATE;@COLUMN_character),GET_LOCK(@COL_character;@COL_numeric),GREATEST(@COL_character,@COL_numeric,@COL_datetime),HEX(@COL_character),HEX(@COL_numeric),HOUR(@COL_datetime),ICU_VERSION(),IF(@COL_numeric,@SELF,@COL_character),IFNULL(@SELF,@COL_numeric),INET_ATON(@COL_character),INET_NTOA(@COL_numeric),INSERT(@SELF;@COL_numeric;@COL_numeric;@COL_character),INSTR(@COL_character;@COL_character)
define: &functions_character_insert NOW(),CURRENT_TIMESTAMP,CURRENT_TIMESTAMP(),CURRENT_DATE,CURRENT_DATE(),DEFAULT(@COL),ICU_VERSION()
define: &functions_datetime DATE_ADD(@SELF;INTERVAL $COL_numeric DAY):0.1,ADDDATE(@COL_timestamp;1),ADDDATE(@COL_datetime;1),NOW(),ADDDATE(@SELF;1),ADDTIME(@SELF;1),CURTIME(),CURRENT_TIME,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP(),CURRENT_DATE,CURRENT_DATE(),DATE(@COL_datetime),DAYOFWEEK(@COL_datetime),DEFAULT(@COL),FROM_DAYS(@COL_numeric),IFNULL(@SELF,@COL_datetime)
define: &functions_datetime_insert NOW(),CURRENT_TIMESTAMP,CURRENT_TIMESTAMP(),CURRENT_DATE,CURRENT_DATE(),DEFAULT(@COL)
define: &functions_lob CURRENT_USER,CURRENT_USER(),PI(),NOW(),ASCII(@COL_varchar),ASCII(@SELF),HEX(@COL),HEX(@SELF),AES_ENCRYPT(@COL;""),AES_DECRYPT(@SELF;""),AES_ENCRYPT(@SELF;""),BIN(@COL),BIT_LENGTH(@COL),BIT_LENGTH(@SELF),CHAR(@COL),CHAR_LENGTH(@SELF),CHAR_LENGTH(@COL),CHARSET(@COL_character),CHARSET(@COL_text),COERCIBILITY(@COL),COLLATION(@COL),COMPRESS(@COL),MD5(@COL),CONNECTION_ID(),CURRENT_TIMESTAMP,CURRENT_TIMESTAMP(),CURRENT_DATE,CURRENT_DATE(),CURRENT_ROLE(),CRC32(@SELF),CRC32(@COL),DATEDIFF(@COL_datetime;@COL_datetime),DATE_FORMAT(@COL_datetime;"%a"),DATE_FORMAT(@COL_datetime;@COL),DAY(@COL_datetime),DATE(@COL_datetime),DATABASE(),DAYOFYEAR(@COL_datetime),DAYOFWEEK(@COL_datetime),DAYOFMONTH(@COL_datetime),DIV(@COL_numeric;@COL_numeric),DEGREES(@COL_numeric),DEFAULT(@COL),EXTRACT(MICROSECOND FROM @COL_timestamp),EXP(@COL_numeric),FORMAT(@COL_numeric;@COL_numeric),FORMAT_BYTES(@COL_numeric),FORMAT_PICO_TIME(@COL_numeric),FROM_DAYS(@COL_numeric),FROM_UNIXTIME(@COL_numeric),FROM_UNIXTIME(@COL_numeric;@COL_character),HEX(@COL_character),HEX(@COL_numeric),HOUR(@COL_datetime),ICU_VERSION(),IFNULL(@SELF,@COL_numeric),INET_NTOA(@COL_numeric),INSERT(@SELF;@COL_numeric;@COL_numeric;@COL_character),INSTR(@COL_character;@COL_character)
define: &functions_lob_insert CURRENT_USER,CURRENT_USER(),PI(),NOW(),RAND(),CONNECTION_ID(),CURTIME(),CURRENT_TIME,CURRENT_TIMESTAMP,CURRENT_TIMESTAMP(),CURRENT_DATE,CURRENT_DATE(),CURRENT_ROLE(),DATABASE(),DEFAULT(@COL),ICU_VERSION()
define: &functions_numeric FINDME(),@SELF IN (@COL_numeric;@COL_numeric):0.1,PI(),NOW(),ASCII(@COL),ASCII(@SELF),HEX(@COL),HEX(@SELF),ABS(@COL_integer),ACOS(@SELF),ASIN(@SELF),ASIN(@COL),ATAN(@SELF),ATAN(@COL),BIN(@COL),BIN(@SELF),BIT_COUNT(@SELF),BIT_LENGTH(@COL),BIT_LENGTH(@SELF),CEIL(@SELF),CEIL(@COL),CHAR_LENGTH(@SELF),CHAR_LENGTH(@COL),COERCIBILITY(@COL),RAND(),CONNECTION_ID(),COS(@SELF),COT(@SELF),CONV(@COL;16;2),CURRENT_TIMESTAMP,CURRENT_TIMESTAMP(),CURRENT_DATE,CURRENT_DATE(),CRC32(@SELF),CRC32(@COL),DATEDIFF(@COL_datetime;@COL_datetime),DATE_FORMAT(@COL_datetime;"%h"),DATE_FORMAT(@COL_datetime;@COL),DAY(@COL_datetime),DAYOFYEAR(@COL_datetime),DAYOFWEEK(@COL_datetime),DAYOFMONTH(@COL_datetime),DIV(@COL_numeric;@COL_numeric),DEGREES(@COL_numeric),DEFAULT(@COL),EXTRACT(MICROSECOND FROM @COL_timestamp),EXP(@COL_numeric),FIELD(@COL_character;@COL_character;@COL_character),FIND_IN_SET(@COL_character;@COL_character),FLOOR(@COL_numeric),HOUR(@COL_datetime),ICU_VERSION(),IFNULL(@SELF,@COL_numeric),INSTR(@COL_character;@COL_character)
define: &functions_numeric_insert PI(),NOW(),RAND(),CONNECTION_ID(),CURRENT_TIMESTAMP,CURRENT_TIMESTAMP(),CURRENT_DATE,CURRENT_DATE(),DEFAULT(@COL),ICU_VERSION()
define: &functions_virtual PI(),CONCAT(@COL_varchar;@COL_character),CONCAT(@FPI(};@COL),ASCII(@COL),HEX(@COL),ABS(@COL),ACOS(@COL),ADDDATE(@COL;1),ADDTIME(@COL;1),AES_ENCRYPT(@COL;""),AES_DECRYPT(@COL;""),AES_ENCRYPT(@COL;""),ASIN(@COL),ASIN(@COL),ATAN(@COL),BIN(@COL),BIT_COUNT(@COL),BIT_LENGTH(@COL),CEIL(@COL),CHAR(@COL),CHAR_LENGTH(@COL),COERCIBILITY(@COL),COLLATION(@COL),COMPRESS(@COL),MD5(@COL),CONCAT_WS("A";@COL_character;@COL_character),COS(@COL),COT(@COL),CRC32(@COL),DATEDIFF(@COL_datetime;@COL_datetime),DATE_FORMAT(@COL_datetime;"%a"),DATE_FORMAT(@COL_datetime;@COL),DAY(@COL_datetime),DATE(@COL_datetime),DAYOFYEAR(@COL_datetime),DATE_ADD(@COL_datetime;INTERVAL 5 DAY),DAYOFMONTH(@COL_datetime),DAYOFWEEK(@COL_datetime),DIV(@COL_numeric;@COL_numeric),DEGREES(@COL_numeric),DEFAULT(@COL),EXTRACT(MICROSECOND FROM @COL_timestamp),EXP(@COL_numeric),FLOOR(@COL_numeric),FORMAT(@COL_numeric;@COL_numeric),FORMAT_BYTES(@COL_numeric),FORMAT_PICO_TIME(@COL_timestamp),FROM_DAYS(@COL_numeric),FROM_UNIXTIME(@COL_numeric),HEX(@COL_character),HEX(@COL_numeric),HOUR(@COL_datetime),ICU_VERSION(),INET_NTOA(@COL_numeric),INSERT(@COL_character;@COL_numeric;@COL_numeric;@COL_character),INSTR(@COL_character;@COL_character)

# on values kinds and syntax see comments imatest_syntax.yaml
# one level deep, a sequence of name: value
# general test parameters

# STRICT if True, every key must be described in syntax checker e.g. imatest_syntax.yaml
# exception: keys ending in _k_.+ and .+ is not expected to contain another _k_
#   followed by any of strict_exceptions
strict: True
strict_exceptions: [ "ro", "ddl", "b2", "3" ]

# TO_CHECK_FILE file against which contents of the test file are checked. Absolute path is OK.
to_check_file: imatest_syntax.yaml

# create database, may run generated SQL even if something already exists
create_db: True

# single, InnoDBCluster etc
config: single
# ports are relative.
ports_destructive: 3
port_load: 2
hosts: 127.0.0.1
# offset port -> x protocol port, 2 -> 4202 -> 4302
mportoffset: 4200
xportoffset: 4300

# this and similar will be evaluated once at startup, doeval in inatest_syntax.yaml
# environment is set im imatest.sh in fact in imatest.dot
# user that runs test SQL, all of it
user: $ENV{IMAROOT}
# user that runs test SQL, all of it
passfile: $ENV{IMAPAS}
tmpdir: defined($ENV{IMATMPDIR})? $ENV{IMATMPDIR} : qw(/tmp)

# MySQL configuration, for SET PERSIST_ONLY then restart
#mysql_initial_cnf: |
mysql_initial_cnf_targets: 0
mysql_initial_cnf_ports: 2
mysql_initial_cnf: |
   log_error_verbosity=3
   innodb_buffer_pool_size=33554432
mysql_initial_cnf_ports_k_3: 3
mysql_initial_cnf_k_3: |
   log_error_verbosity=3
   innodb_buffer_pool_size=67108864

mysql_set_how: persist,global,EMPTY #debug
mysql_dynamic_cnf: |
   innodb_buffer_pool_size=16777216;60-120;STD

# test load
server_terminate_shutdown: $ENV{IMASTOPMANY} $ENV{_imatest_ports_destructive_rel}
server_terminate_shutkill_before: 1-3,0-10
server_terminate_kill: $ENV{IMAKILLMANY} $ENV{_imatest_ports_destructive_rel}
server_terminate_sigkill: $ENV{IMAHAKILLMANY} $ENV{_imatest_ports_destructive_rel} KILL
server_terminate_sigstop: $ENV{IMAHAKILLMANY} $ENV{_imatest_ports_destructive_rel} STOP
server_terminate_unstop: $ENV{IMAHAKILLMANY} $ENV{_imatest_ports_destructive_rel} CONT
# sleep this much after server termination BEFORE restarting the server. So it is apart from server_termination_every_seconds
server_termination_duration: 10-20
server_termination_duration_on_sigstop: 60,10,20
# wait till server process diappears
server_termination_wait: yes
server_termination_wait_timeout: 60
# wait until the server becomes at least readonly
server_start_control: yes
server_start_timeout: 70

# evaluated immediately before using the file
check_thread_out: $ENV{_imatest_tmpdir}.'/'.$ENV{_imatest_check_filebase}.'.out'
check_thread_err: $ENV{_imatest_tmpdir}.'/'.$ENV{_imatest_check_filebase}.'.out'
destructive_thread_out: $ENV{_imatest_tmpdir}.'/'.$ENV{_imatest_destructive_filebase}.'.out'
destructive_thread_err: $ENV{_imatest_tmpdir}.'/'.$ENV{_imatest_destructive_filebase}.'.out'
load_thread_out: $ENV{_imatest_tmpdir}.'/'.$ENV{_imatest_load_filebase}.'.out'
load_thread_err: $ENV{_imatest_tmpdir}.'/'.$ENV{_imatest_load_filebase}.'.out'
load_thread_sql: $ENV{_imatest_tmpdir}.'/'.$ENV{_imatest_load_filebase}.'.sql'
load_thread_client_log: $ENV{_imatest_tmpdir}.'/'.$ENV{_imatest_load_filebase}.'.log'
load_execute_sql: yes

# milliseconds, sleep after txn end
txn_sleep_after_ms: 0:0.999,0-1:0.8,2-4:0.8,5-20:0.8,21-100
txn_sleep_in_ms: 0:0.99,1-4:0.99,5-10000
# when not in txn
txn_begin_p: 0.5
txn_begin_how: work:0.5,ro:0.2,rw
# anytime
txn_end_p: 0.01
txn_end_how: commit:0.9,rollback
# length is checked simultaneously
txn_maxlength_ms: 10000-30000:0.1,100-200:0.01,1000-2000:0.99,3000-100000
txn_maxlength_stmt: 10-100:0.5,10-1000:0.5,1-2:0.9,1-10:0.9,1-1000

schema_drop_first: yes
# single %s replaced with schema number
schema_name_format: gts%s
# single %s replaced with table number
table_name_format: tt%s!test_%s_table,test_table_longer_name_%09d
column_name_format: col%s!test_%s_col,test_col_longer_name_%09d

table_autoextend_size: 4M:0.2,8M:0.2,12M:0.2,16M:0.2,20M:0.1,EMPTY
table_autoinc: 1-10:0.001,1000-2000:0.001,EMPTY
table_compression: EMPTY:0.9,ZLIB:0.5,LZ4:0.5,NONE
table_row_format: EMPTY:0.5,DYNAMIC:0.5,COMPACT:0.2,REDUNDANT:0.2,COMPRESSED1:0.3,COMPRESSED2:0.3,COMPRESSED8:0.3,COMPRESSED16:0.3,COMPRESSED4
table_stats_auto_recalc: 1:0.5,0:0.01,EMPTY
table_stats_persistent: 0:0.01,1:0.8,EMPTY
table_stats_sample_pages: 1:0.1,1-40:0.9,1-999:0.1,EMPTY

table_has_autoinc_p: 0.1
pk_autoinc_p: 0.99
columns_total: 0:0.001,1-8:0.9,1-40
indexes_per_table: 0:0.1,1-2:0.5,1-5:0.9,0-65:0.01,0-4 
# ALL means include all columns in any index
parts_per_index: 1:0.9,1-2:0.9,1-4:0.9,1-10:0.9,ALL:0.1,1  
index_part_type: function:0.01,column
index_unique_p: 0.1
index_prefix_len: 1-10,1-110,1-258,1-769,1-3092
# when we can but not mandatory
index_prefix_use: yes:0.01,no 
index_visibility: EMPTY:0.99,invisible:0.9,visible
part_direction: EMPTY:0.99,desc:0.9,asc
fulltext_index_p: 0.001 

column_null: not_null:0.8,EMPTY:0.9,null
column_unique_p: 0.05
column_virtuality: virtual:0.5,stored:0.5,EMPTY 

# counted independently from pk and non pk
virtual_columns_per_table: 0:0.99,1:0.9,1-4:0.9,1-100:0.1,0 
virtual_expression_length: 1-3
virtual_expression_depth: 1:0.99,2
virtual_term_kind: function,value

analyze_column_p: 0.2

select_where_all_p: 0.01
select_how: all:0.1,count:0.1,columns
select_column_p: 0.8
select_distinct_p: 0.01
select_group_by_p: 0.5 #debug
select_order_by_p: 0.8 #debug
select_order_by_column_p: 0.2 #debug

insert_expression_depth: 1:0.99,2
insert_expression_length: 1:0.9,1-2:0.9,1-3
insert_term_kind: value:0.9,function
insert_default_p: 0.9

update_expression_depth: 1:0.99,2
update_expression_length: 1:0.9,1-2:0.9,1-3
update_term_kind: function:0.1,value
update_column_p: 0.1
update_default_p: 0.001
update_where_all_p: 0.001

delete_where_all_p: 0.0001

default_expression_length: 1-2
default_expression_depth: 1:0.99,1-2
default_parenthesis_p: 0.99
default_expression_term: CONSTANT:0.99,FUNCTION:0.9,COLUMN
default_term_kind: function:0.05,value
column_default_p: 0.1

where_all_by_no_where_p: 0.01
where_logical_length: 1-2:0.9,1-4
where_logical_depth: 1:0.9,2
where_expression_depth: 1:0.99,2
where_expression_length: 1-3
where_expression_not_p: 0.1
where_term_kind: function,value
where_column_p: 0.2

load_alter_length: 1-2
load_alter_kind: ADD_KEY:0.1,TABLE_EB:0.1,ADD_COL:0.1,DROP_COL:0.01,DROP_KEY
load_create_table_kind: select,like,new
load_analyze_local_p: 0.5 #debug
load_analyze_kind: drop:0.5,update:0.8,just
load_analyze_buckets: 0,5,20,100
load_check_quick_p: 0.1
load_optimize_local_p: 0.5 #debug
load_select_limit: M1:0.01,EMPTY:0.9,10-100:0.5,1-1000:0.5,EMPTY

explain: explain_analyze:0.001,explain:0.001,EMPTY
operator_null: EMPTY:0.9,is_not_null:0.9,is_null
operator_logical: AND,OR
expression_term: CONSTANT:0.5,COLUMN:0.8,FUNCTION
expression_group: EMPTY:0.9,PARENTHESIS:0.9,FUNCTION
insert_parenthesis_p: 0.001
update_parenthesis_p: 0.001
virtual_parenthesis_p: 0.001
where_parenthesis_p: 0.001
#
function_insert_datetime: *functions_datetime_insert
function_insert_decimal: *functions_numeric_insert
function_insert_floating: *functions_numeric_insert
function_insert_integer: *functions_numeric_insert
function_insert_binary: *functions_lob_insert
function_insert_character: *functions_lob_insert
function_insert_lob: *functions_lob_insert
function_insert_enum: value_generate_enum@S(@QSTSELF;"insert")
function_insert_set: value_generate_set@S(@QSTSELF;"insert")
function_insert_json: value_generate_json@S(@QSTSELF;"insert")
# N= becomes !=
operator_logical_decimal: o@<,o@>,o@<=,o@>=,o@<=>,o@N=,o@<>
operator_logical_integer: o@<,o@>,o@<=,o@>=,o@<=>,o@N=,o@<>
operator_logical_floating: o@<,o@>,o@<=,o@>=,o@<=>,o@N=,o@<>
# MINUS is -
operator_decimal: o@+,o@MINUS,o@*,o@/,o@%,o@p+,o@pMINUS,o@MOD,o@DIV,o@&,o@<<,o@>>,o@AND,o@^
operator_integer: o@+,o@MINUS,o@*,o@/,o@%,o@p+,o@pMINUS,o@MOD,o@DIV,o@&,o@<<,o@>>,o@AND,o@^
operator_floating: o@+,o@MINUS,o@*,o@/,o@%,o@p+,o@pMINUS,o@MOD,o@DIV,o@&,o@<<,o@>>,o@AND,o@^
#
# ; will become , @SELF will become column name @COL a random column name
function_update_binary: *functions_lob
function_update_character: *functions_character
function_update_datetime: *functions_datetime
function_update_timestamp: *functions_datetime
# QSTSELF is "schema.table.col"
function_update_enum: value_generate_enum@S(@QSTSELF;"update")
function_update_set: value_generate_set@S(@QSTSELF;"update")
function_update_decimal: *functions_numeric
function_update_floating: *functions_numeric
function_update_integer: *functions_numeric
function_update_json: value_generate_json@S(@QSTSELF;"update")
function_update_lob: *functions_lob
function_virtual: *functions_virtual
function_where_binary: *functions_lob
function_where_character: *functions_character
function_where_datetime: *functions_datetime
function_where_timestamp: *functions_datetime
function_where_decimal: *functions_numeric
function_where_enum: value_generate_enum@S(@QSTSELF;"where")
function_where_set: value_generate_set@S(@QSTSELF;"where")
function_where_floating: *functions_numeric
function_where_integer: *functions_numeric
function_where_lob: *functions_lob
#here

column_visibility: EMPTY:0.99,invisible:0.01,visible
null_legitimate_p: 0.01
null_illegitimate_p: 0.001
autoinc_explicit_value_p: 0.001

# like many other values this is hardcoded inside imatest.pl
datatype_class: character:0.5,integer:0.2,decimal:0.2,floating:0.2,datetime:0.5,binary:0.1,enums:0.1,json:0.2,lob:0.9,spatial 
# mind the format
datatype_class2dt: integer:tinyint-smallint-mediumint-bigint-int-bit,spatial:polygon-multipolygon-geometrycollection-geomcollection-point-multilinestring-multipoint-geometry-linestring,decimal:decimal-numeric,floating:float-double,character:char-varchar,binary:binary-varbinary,lob:tinyblob-tinytext-blob-text-mediumblob-mediumtext-longblob-longtext,enums:enum-set,datetime:datetime-date-timestamp-time-year,json:json
datatype_integer: tinyint:0.1,smallint:0.1,mediumint:0.1,bigint:0.2,int:0.9,bit
#datatype_spatial: point 
datatype_spatial: polygon,multipolygon,geometrycollection,point,multilinestring,multipoint,geometry,linestring 
datatype_decimal: decimal:0.99,numeric
datatype_floating: float:0.9,double
datatype_character: char:0.2,varchar
datatype_binary: binary:0.1,varbinary
datatype_lob: tinyblob,tinytext,blob,text,mediumblob,mediumtext,longblob,longtext
datatype_enums: enum:0.9,set
datatype_datetime: datetime:0.1,date:0.1,timestamp:0.9,time:0.1,year

integer_unsigned_p: 0.3
number_reverse_sign_legitimate_p: 0.2
number_reverse_sign_illegitimate_p: 0.05
datatype_bit_len: EMPTY:0.5,1-60:0.8,61-68
# length of the value, not value itself
value_bit: 1-4:0.5,5-60:0.8,61-68
# sign is reversed separately, see *reverse_sign*
value_tinyint: 0-4:0.5,5-100:0.5,101-150:0.5,250-258
value_json_kind: SIMPLEML,FROMSCRIPT,REFARRAY,SCALAR,REFHASH
value_json_len: 0:0.01,1-100:0.5,100-1000:0.9,10000-20000:0.9,100-1000000
# appears in a for loop
value_json_small_len: 0:0.1,1:0.1,2-10:0.9,11-1000
value_smallint: 0-100:0.5,0-200:0.9,0-300:0.9,10000-20000:0.5,32200-32300:0.1,1-80000
value_mediumint: 0-100:0.5,10000-20000:0.9,8388000-8389000:0.5,16777000-16778000
value_int: 0-100:0.5,10000-20000:0.5,10000-1000000:0.9,1-10000000:0.9,2047483000-2047484000
# todo better separate for unsigned
value_bigint: 0-100:0.5,10000-20000:0.9,1-9123372036854:0.9,9123372036854776000-9123372036854776000
decimal_whole: 3-8:0.5,EMPTY:0.2,9-59:0.8,60-65
decimal_part: EMPTY:0.2,0-2:0.5,3-8:0.5,9-28:0.5,29-30
# also applies to numeric. This is not what we insert. Rather it is 10 POW this * rand(). This may change, see code if matters.
# todo exp adjust
decimal_value: 1:0.01,0:0.2,0-2:0.5,3-6:0.9,7-14:0.9,1-62
# EMPTY means no exponent, then we will use a decimal_value
float_value_exp: EMPTY:0.2,0:0.1,1-10:0.9,M35-35:0.9,M40-M37:0.9,37-38
double_value_exp: EMPTY:0.2,0:0.1,1-10:0.9,M35-35:0.9,M305-100
datetime_fractional: EMPTY:0.5,0:0.2,1-6
year_value: 1901-2155:0.9,0:0.01,1969-2039
datetime_year_value: 1969-2040:0.9,1000-1999
timestamp_year_value: 1971-2037:0.9,1999-2001:0.9,2002-2025
datetime_month_value: 1-12:0.99,0-13
datetime_day_value: 1-28:0.99,0-32
datetime_hour_value: 0-23:0.99,M1-25
time_hour_value: 0-23:0.5,M23-23:0.9,M838-838
datetime_minute_value: 0-59:0.99,M1-61
datetime_second_value: 0-59:0.99,M1-61
datetime_microsecond_value: 0:0.5,1-100:0.5,EMPTY:0.5,499999-500001:0.5,0-999999:0.9,M2-1000005
character_set: EMPTY:0.5,utf8mb4:0.5,latin1
datatype_char_len: 0:0.01,1-10:0.8,11-250:0.9,0-260
value_char_len: 0:0.1,1-10:0.9,11-250:0.9,251-260
datatype_varchar_len: 0:0.01,1-10:0.5,11-250:0.9,251-260:0.1,261-16383
value_varchar_len: 0:0.1,1-10:0.9,11-250:0.9,251-260:0.9,261-5000:0.9,65000-70000
# adjust generated value to column length, applies to binary and blob as well
value_kchar_length_adjust_p: 0.99
datatype_binary_len: EMPTY:0.1,0:0.01,1-10:0.9,11-250:0.9,1-255
value_binary_len: 0:0.1,1-10:0.9,1-250:0.9,1-260
datatype_varbinary_len: 0:0.01,1-10:0.9,1-250:0.9,1-260:0.9,1-5000:0.9,1-75535
value_varbinary_len: 0:0.1,1-10:0.9,1-250:0.9,1-260:0.9,1-5000:0.9,1-70000
datatype_lob_key_len: 1-255:0.9,1-500
# applies to both text and binary
value_tinylob_len: 0:0.01,1-100:0.9,1-255:0.9,1-300
value_lob_len: 0:0.01,1-100:0.9,1-20000:0.9,1-35000
value_mediumlob_len: 0:0.01,1-100:0.9,1-20000:0.9,1-8389000:0.9,1-6778000
value_longlob_len: 0:0.01,1-100:0.9,1-20000:0.9,1-2147484000:0.9,1-4294968000
datatype_enum_len: 1-10:0.9,1-25:0.9,1-26:0.99,1-65000
datatype_set_len: 1-10:0.9,1-60:0.9,1-64
datatype_set_value_len: 1:0.9,2:0.9,1-10:0.9,1-60:0.9,1-70
# M will NOT become -
geometry_kind: point,linestring,polygon
multigeometry_kind: point,linestring,polygon
# WKT, allowed max chars when we build the value
value_spatial_len: 100-1000:0.5,10000-20000:0.9,100-8389000:0.1,100-16778000:0.1,100-200
spatial_srid: 4326:0.9,0:0.9,32761:0.01,EMPTY
value_point_x: M90-90:0.9,M92-92
value_point_y: M180-180:0.9,M182-182
value_linestring_len: 2:0.2,3-8:0.9,2-8:0.9,2-200
value_multilinestring_len: 1-2:0.2,3-8:0.9,2-8:0.9,2-300
value_multipolygon_len: 1-2:0.2,3-8:0.9,2-8:0.9,2-300
value_multipoint_len: 1-2:0.2,3-8:0.9,2-8:0.9,2-300
value_multigeometry_len: 1-2:0.2,3-8:0.9,2-8:0.9,2-300
# vertices
value_polygon_len: 3:0.2,3-8:0.9,4-6:0.9,3-300
# rings
value_polygon_size: 1:0.9,2:0.9,3-8
value_polygon_kind: RIGHT,SAME,MIRROR,STRANGE
# start many instances sequentially
server_restart: $ENV{IMASTARTMANY} $ENV{_imatest_ports_destructive_rel}
# check many instances sequentially
server_check: $ENV{IMACHECKMANY} $ENV{_imatest_ports_check_rel}
load_thread_execute_with: perl
