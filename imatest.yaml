---
# todo: see imatest.pl, but some here
# on values kinds and syntax see comments imatest_syntax.yaml
# code rules over comments so when in doubt see code
# atm one level deep, a sequence of name: value
# general test parameters
# loosely grouped, no requirements on order

# STRICT if True, every key must be described in syntax checker e.g. imatest_syntax.yaml
strict: True
# alternatively to_check_inline: can be used

# TO_CHECK_FILE file against which contents of the test file are checked. Absolute path is OK.
to_check_file: imatest_syntax.yaml

# Do we create test sandbox anew. It may already exist in which case it is NOT destroyed and recreated.
create_server: False
# create database, may run generated SQL even if something already exists
create_db: True

# destroy sandbox, datadir and all
teardown: False
# teardown how to
destroy_destroy: $ENV{IMADESTROYMANY} $ENV{_imatest_port_rel}

# test threads are killed by the driving thread. 
# mysqld is left as is. todo: shutdown optionally
test_duration_seconds: 300

# general configuration

# single, InnoDBCluster etc
config: single
# single port for now, ports are relative.
ports: 2
# ports are relative to this offset, 2 -> 4202
portoffset: 4200
# offset port -> x protocol port, 2 -> 4202 -> 4302
xportoffset: 100

# this and similar will be evaluated once at startup, doeval in inatest_syntax.yaml
# environment is set im imatest.sh in fact in imatest.dot
# mysqlsh executable
mysqlsh: $ENV{MYSQLSH}
# user that runs test SQL, all of it
user: $ENV{IMAROOT}
# user that runs test SQL, all of it
passfile: $ENV{IMAPAS}
tmpdir: defined($ENV{IMATMPDIR})? $ENV{IMATMPDIR} : qw(/tmp)
# try to use x protocol mostly
usex: True

# MySQL configuration, for SET PERSIST_ONLY then restart
mysql_initial_cnf: |
  innodb_buffer_pool_size=50000000
  innodb_buffer_pool_in_core_file=OFF

# test load
# test load: shutdown or kill and restart
#server_terminate: Yes
# will the test terminate mysqld every now and then
server_terminate: No
# see comments on Rseq in imatest_syntax.yaml
# the test will terminate the server every about 60 seconds
# this sleep is when the server is running
server_termination_every_seconds: 55-65
# terminate server like so. kill is mysqlsh builtin kill whatever that is. dba.killSandboxInstance
server_termination_how: shutdown,kill,sigkill,sigstop!shutkill
# this and similar is evaluated at server termination time
server_terminate_shutdown: $ENV{IMASTOPMANY} $ENV{_imatest_port_rel}
server_terminate_kill: $ENV{IMAKILLMANY} $ENV{_imatest_port_rel}
server_terminate_sigkill: $ENV{IMAHAKILLMANY} $ENV{_imatest_port_rel} KILL
server_terminate_sigstop: $ENV{IMAHAKILLMANY} $ENV{_imatest_port_rel} STOP
server_terminate_unstop: $ENV{IMAHAKILLMANY} $ENV{_imatest_port_rel} CONT
# sleep this much after server termination BEFORE restarting the server. So it is apart from server_termination_every_seconds
server_termination_duration: 10-20
server_termination_duration_on_sigstop: 60,10,20
# wait till server process diappears
server_termination_wait: Yes
server_termination_wait_timeout: 60
# wait until the server becomes at least readonly
server_start_control: Yes
server_start_timeout: 60

# test load: client threads
client_threads: 1
# evaluated immediately before using the file
client_thread_out: qw(/dev/null)
client_thread_err: qw(/dev/null)
client_thread_sql: $ENV{_imatest_tmpdir}.'/'.$ENV{_imatest_client_filebase}.'.sql'
client_thread_mshlog: $ENV{_imatest_tmpdir}.'/'.$ENV{_imatest_client_filebase}.'.log'
mshlog_remove_before: Yes
client_execute_sql: No
# mostly for internal use e.g. self test. 0 means unlimited.
client_max_stmt: 100

# milliseconds, sleep after txn end
txn_sleep_after_ms: 20-40

# todo: different load config per thread
# database structure
# database structure: # of schemas to create
schemas: 1!1-3:0.5,7-9
# drop schema before creation
schema_drop_first: Yes
# single %s replaced with schema number
#schema_name_format: ts%s,test_%s_schema,test_schema_longer_name_%09d
schema_name_format: gts%s
tables_per_schema: 16!1-4:0.2,5-9:0.4,5-10
# single %s replaced with table number
table_name_format: tt%s!test_%s_table,test_table_longer_name_%09d

tables_create_sql: $ENV{_imatest_tmpdir}.'/create_tables.sql'

# table properties. EMPTY means do not specify
table_autoextend_size: 4M:0.2,8M:0.2,12M:0.2,16M:0.2,20M:0.1,EMPTY
table_autoinc: 1-10:0.01,1000-2000:0.01,EMPTY
table_compression: EMPTY:0.9,ZLIB:0.5,LZ4:0.5,NONE
table_row_format: EMPTY:0.5,DYNAMIC:0.5,COMPACT:0.5,REDUNDANT:0.1,COMPRESSED1:0.1,COMPRESSED2:0.1,COMPRESSED8:0.1,COMPRESSED16:0.1,COMPRESSED4
table_stats_auto_recalc: 0,1,EMPTY
table_stats_persistent: 0:0.1,1:0.5,EMPTY
table_stats_sample_pages: 1:0.1,5-40:0.3,999:0.1,EMPTY

# table columns and indexes
# only if we find an integer column. No floating autoincs
# probability 0 to 1.0
table_has_autoinc_p: 0.6
pk_autoinc_p: 0.8
columns_pk: 1:0.5,2:0.5,3-12
column_pk_name_format: pk%s,primary_key_column_%09d
columns_non_pk: 0:0.1,1:0.2,10-12:0.3,70-80:0.2,2-9:0.8,13-69
column_non_pk_name_format: col%s,__col%s,test_%s_column_abc123defaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
# do we put pk columns before non pk columns in CREATE TABLE
pk_first_p: 0.8
indexes_per_table: 0:0.2,1:0.5,2-5:0.1,62:0.1,1-3
# ALL means include all columns in any index
columns_per_index: 1:0.5,2:0.5,3-16:0.2,ALL:0.1,1
index_unique_p: 0.3
index_prefix_len: 1-10,100-110,254-258,765-769,3070-3072
index_visibility: VISIBLE,INVISIBLE,EMPTY
index_direction: EMPTY:0.7,DESC:0.6,ASC
fulltext_index_p: 0.05

#here
# NOT_NULL will become NOT NULL
column_null: NOT_NULL:0.7,EMPTY:0.5,NULL
column_unique_p: 0.1
column_default: VALUE,EXPR,EMPTY
column_virtuality: VIRTUAL:0.5,STORED:0.5,EMPTY
# counted separately from pk and non pk
virtual_columns_per_table: 0:0.8,1:0.5,2-4:0.5,5-100:0.1,0
virtual_expression_length: 1-3
virtual_expression_depth: 1!1-2
default_expression_length: 1-3
default_expression_depth: 1-2
load_sql_class: INSERT:0.5,SELECT!UPDATE:0.1,DELETE:0.1,INSEL:0.1,ALTER
# for F1A function_1A below is used
load_function_upper: F1A,F2AT
load_function_class: F0,F1N,F1D,F2NN,F2DI,F2DN,F2DT,F3ANN,FFN,F1A,F2AT,FFA,F3NNN,F2DA,F1T,F2AA,F3AAN,F3AAA,F3ANA
select_where_all_p: 0.1
select_count_star_p: 0.5
select_star_p: 0.5
select_column_p: 0.2
# E AND E
# for WHERE
where_logical_length: 2-4
where_logical_depth: 1-2
# (N+(N*N))/N
where_expression_depth: 1-2
# N+N
where_expression_length: 2-4
where_datatype: bigint,binary,bit,blob,char,date,datetime,decimal,double,enum,float!geometry,geometrycollection,int,json,linestring,longblob,longtext,mediumblob,mediumint,mediumtext,multilinestring,multipoint,multipolygon,numeric,point,polygon,set,smallint,text,time,timestamp,tinyblob,tinyint,tinytext,varbinary,varchar,year
# postprocessed e.g. PLUS becomes + per operators_sql
operators:  PLUS,MULT,DIV,MINUS,BITAND,RSHIFT,LSHIFT,NSEQ,MOD,BITXOR,AND
operators_compare: GT,EQ,GE,LT,LE,NE,ISNULL,ISNOTNULL,NSEQ
operators_isnull: ISNULL,ISNOTNULL
operators_logical: AND,OR
operators_nots: 0:0.9,1:0.8,2
operators_sql: qw(PLUS:+ MULT:* DIV:/ MINUS:- BITAND:& RSHIFT:>> LSHIFT:<< AND:&& GT:> EQ:= GE:>= LT:< LE:<= NE:!= NSEQ:<=> MOD:% BITXOR:^ ISNULL:IS_NULL ISNOTNULL:IS_NOT_NULL) 
# on lowest level function is with 0 arg e.g. PI()
expression_term: CONSTANT:0.1,COLUMN:0.5,FUNCTION
# no function when used to build  logical expressions
expression_group: PARENTHESIS:0.5,FUNCTION
prefer_right_type_p: 0.95
function_arg: COLUMN,CONSTANT
# 0 is 0 arguments
# can be converted to CHAR or similar
function_0C: PI,CONNECTION_ID,CURDATE,CURTIME,CURRENT_ROLE,CURRENT_USER,CURRENT_TIMESTAMP,DATABASE,NOW,SYSDATE,UNIX_TIMESTAMP,UTC_DATE,UTC_TIME,RAND
# can be converted to TIMESTAMP or similar
function_0D: CURDATE,CURTIME,CURRENT_TIMESTAMP,NOW,SYSDATE,UNIX_TIMESTAMP,UTC_DATE,UTC_TIME
# can be converted to INT and similar
function_0N: PI,RAND,CONNECTION_ID
function_0_as_constant_p: 0.8
function_0_virtual: PI
function_todo: CONV,ADDATE_INTERVAL,CONVERT_TZ,DATE_ADD,DATE_SUB,GET_FORMAT,PERIOD_ADD,PERIOD_DIFF,STR_TO_DATE,SUBDATE_INTERVAL,TIMESTAMPADD,TIMESTAMPDIFF,EXPORT_SET,FROM_BASE64,UNHEX,FULLTEXT
# char -> char
function_C1C: ASCII,HEX,BIT_LENGTH,CHAR_LENGTH,COERCIBILITY,CHARSET,COLLATION,COMPRESS,CONCAT,CRC32,LCASE,LENGTH,UPPER,ORD,QUOTE,REVERSE,RTRIM,SOUNDEX,TO_BASE64,TRIM,LTRIM,UNHEX,WEIGHT_STRING
# char -> n
function_C1N: ASCII,BIT_LENGTH,CHAR_LENGTH
# n -> c
function_N1C: EXP,ACOS,LN,SQRT,ATAN,TAN,ABS,ASIN,CEIL,COS,COT,DEGREES,FLOOR,RADIANS,SIGN,SIN,FROM_DAYS,FROM_UNIXTIME,SEC_TO_TIME,BIN,CHAR
# n -> date
function_N1D: FROM_DAYS,FROM_UNIXTIME
# n -> time
function_N1T: SEC_TO_TIME
# n -> n
function_N1N: EXP,ACOS,LN,SQRT,ATAN,TAN,ABS,ASIN,BIN,BIT_AND,BIT_COUNT,BIT_OR,BIT_XOR,CEIL,COS,COT,FROM_DAYS,FROM_UNIXTIME,SEC_TO_TIME,DEGREES,FLOOR,RADIANS,SIGN,SIN,OCT,ROUND
# 1 date argument, C (castable to char) return value
function_D1C: DATE,DAY,DAYNAME,DAYOFMONTH,DAYOFWEEK,DAYOFYEAR,HOUR,LAST_DAY,MICROSECOND,MINUTE,MONTH,MONTHNAME,QUARTER,SECOND,TIME,TIMESTAMP,TIME_TO_SEC,TO_DAYS,TO_SECONDS,WEEK,WEEKDAY,WEEKOFYEAR,YEAR,YEARWEEK
# 1 date argument, date return value
function_D1D: DATE,LAST_DAY,TIMESTAMP
# date -> number
function_D1N: DAY,DAYOFMONTH,DAYOFWEEK,DAYOFYEAR,HOUR,MICROSECOND,MINUTE,MONTH,QUARTER,SECOND,TIME_TO_SEC,TO_DAYS,TO_SECONDS,WEEK,WEEKDAY,WEEKOFYEAR,YEAR,YEARWEEK
# n,c -> c
function_NC2C: ELT
# c,c -> n
function_CC2N: FIELD,FIND_IN_SET
# n,n -> c
function_CC2C: CONCAT,CONCAT_WS,FIELD,FIND_IN_SET
# n,n -> c
function_NN2C: MOD,DIV,POWER,ROUND,TRUNCATE,FORMAT
# n,n -> n
function_NN2N: MOD,DIV,POWER,ROUND,TRUNCATE
# n,n -> char
function_NN2C: MAKEDATE,CHAR
# n,n -> date
function_NN2D: MAKEDATE
# date, date -> char
function_DD2C: TIMEDIFF
# date, date -> time
function_DD2T: TIMEDIFF
# date, time -> date
function_DT2C: ADDTIME,SUBTIME
# date, time -> date
function_DT2D: ADDTIME,SUBTIME
# date,number -> char
function_DN2C: ADDDATE,SUBDATE
# date,number -> date
function_DN2D: ADDDATE,SUBDATE
# date,date -> n
function_DN2N: DATEDIFF
# date,number -> char
function_DN2C: DATEDIFF
# n,n,n -> char
function_NNN3C: MAKETIME,CHAR
# n,n,n -> time
function_NNN3T: MAKETIME
# c...c -> n
function_INFC9N: FIELD
# c...c -> c
function_INFC9C: CONCAT,CONCAT_WS,FIELD
# n...n -> char
function_INFN9C: CHAR
column_visibility: EMPTY:0.9,INVISIBLE:0.2,VISIBLE
null_legitimate_p: 0.6
null_illegitimate_p: 0
autoinc_explicit_value_p: 0.001

# like many other values this is hardcoded inside imatest.pl
datatype_class: INTEGER,SPATIAL,DECIMAL,FLOATING,CHARACTER,BINARY,LOB,ENUMS,DATETIME,JSON

datatype_classes_numeric: INTEGER,DECIMAL,FLOATING
datatype_integer: TINYINT:0.01,SMALLINT:0.1,MEDIUMINT:0.01,BIGINT:0.5,INT:0.9,BIT
integer_unsigned_p: 0.6
integer_reverse_sign_legitimate_p: 0.2
integer_reverse_sign_illegitimate_p: 0
datatype_bit_len: EMPTY:0.5,1-60:0.8,61-63
# length of the value, not value itself
value_bit: 1-4:0.5,5-60:0.8,61-63
# sign is reversed separately, see *reverse_sign*
value_tinyint: 0-4:0.5,5-100:0.5,101-150:0.5,250-254
value_smallint: 0-100:0.5,10000-20000:0.5,32200-32300
value_mediumint: 0-100:0.5,10000-20000:0.5,8388000-8389000:0.5,16777000-16778000
value_int: 0-100:0.5,10000-20000:0.5,2047483000-2047484000
# todo better separate for unsigned
value_bigint: 0-100:0.5,10000-20000:0.5,9123372036854776000-9123372036854776000
datatype_decimal: DECIMAL:0.9,NUMERIC
decimal_whole: 3-8:0.5,EMPTY:0.2,9-59:0.8,60-65
decimal_part: EMPTY:0.2,0-2:0.5,3-8:0.5,9-28:0.5,29-30
# also applies to numeric. This is not what we insert. Rather it is 10 POW this * rand(). This may change, see code if matters.
# todo exp adjust
decimal_value: 1:0.01,0:0.2,0-2:0.5,3-6:0.8,7-28:0.5,29-62
datatype_floating: FLOAT,DOUBLE
# EMPTY means no exponent, then we will use a decimal_value
float_value_exp: EMPTY:0.2,0:0.1,1-10:0.5,M35-35:0.5,M40-M37:0.5,37-38
double_value_exp: EMPTY:0.2,0:0.1,1-10:0.5,M35-35:0.5,M305
datatype_datetime: DATETIME:0.2,DATE:0.3,TIMESTAMP:0.7,TIME:0.5,YEAR
datetime_fractional: EMPTY:0.5,0:0.2,1-6
datetime_fractional_illegal_p: 0
year_value: 1901-2155:0.5,0:0.1,1969-2039
datetime_year_value: 1969-2040:0.5,1000-1999
timestamp_year_value: 1971-2037:0.5,1999-2001:0.5,2002-2025
datetime_month_value: 1-12
datetime_day_value: 1-28
datetime_hour_value: 0-23
time_hour_value: 0-23:0.5,M23-23:0.9,M838-838
datetime_minute_value: 0-59
datetime_second_value: 0-59
datetime_microsecond_value: 0:0.5,1-100:0.5,EMPTY:0.5,499999-500001:0.5,0-999999
datatype_character: CHAR,VARCHAR
character_set: EMPTY:0.5,utf8mb4:0.2,latin1
datatype_char_len: 0:0.01,1-10:0.8,11-250:0.05,251-255
value_char_len: 0:0.1,1-10:0.8,11-250:0.05,251-260
datatype_varchar_len: 0:0.01,1-10:0.1,11-250:0.5,251-260:0.1,261-16383:0.1,100
value_varchar_len: 0:0.1,1-10:0.1,11-250:0.5,251-260:0.1,261-5000:0.1,65000-70000
# adjust generated value to column length, applies to binary and blob as well
value_kchar_length_adjust_p: 1
datatype_binary: BINARY,VARBINARY
datatype_binary_len: EMPTY:0.1,0:0.01,1-10:0.8,11-250:0.05,251-255
value_binary_len: 0:0.1,1-10:0.8,11-250:0.05,251-260
datatype_varbinary_len: 0:0.01,1-10:0.1,11-250:0.5,251-260:0.1,261-5000:0.1,65000-65535
value_varbinary_len: 0:0.1,1-10:0.1,11-250:0.5,251-260:0.1,261-5000:0.1,65000-70000
datatype_lob: TINYBLOB,TINYTEXT,BLOB,TEXT,MEDIUMBLOB,MEDIUMTEXT,LONGBLOB,LONGTEXT
datatype_lob_key_len: 1-255
# applies to both text and binary
value_tinylob_len: 0:0.01,1-100:0.5,101-255
value_lob_len: 0:0.01,1-100:0.5,10000-20000:0.1,25000-35000
value_mediumlob_len: 0:0.01,1-100:0.5,10000-20000:0.1,8388000-8389000:0.1,6777000-6778000:0.1,1-1000
value_longlob_len: 0:0.01,1-100:0.5,10000-20000:0.1,2147483000-2147484000:0.1,4294967000-4294968000:0.1,1-10
datatype_enums: ENUM:0.9,SET
datatype_enum_len: 1-10:0.5,11-25:0.9,25-26:0.9,27-65000
datatype_set_len: 1-10:0.8,11-60:0.5,61-64
datatype_set_value_len: 1:0.2,2:0.5,1-10:0.8,11-60:0.5,61-70
# M will NOT become -
datatype_spatial: POLYGON,MULTIPOLYGON,GEOMETRYCOLLECTION,POINT,MULTILINESTRING,MULTIPOINT,GEOMETRY,LINESTRING
geometry_kind: POINT,LINESTRING,POLYGON
multigeometry_kind: POINT,LINESTRING,POLYGON
# WKT, allowed max chars when we build the value
value_spatial_len: 100-1000:0.5,10000-20000:0.1,8388000-8389000:0.1,16777000-16778000:0.1,100-200
spatial_srid: 4326:0.5,0:0.5,32761:0.5,EMPTY
value_point_x: M90-90
value_point_y: M180-180
value_linestring_len: 2:0.2,3-8:0.5,2-300:0.1,2-8
value_multilinestring_len: 1-2:0.2,3-8:0.5,2-300:0.1,2-8
value_multipolygon_len: 1-2:0.2,3-8:0.5,2-300:0.1,2-8
value_multipoint_len: 1-2:0.2,3-8:0.5,2-300:0.1,2-8
value_multigeometry_len: 1-2:0.2,3-8:0.5,2-300:0.1,2-8
# vertices
value_polygon_len: 3:0.2,3-8:0.5,3-300:0.1,4-6
# rings
value_polygon_size: 1:0.8,2:0.5,3-8
value_polygon_kind: RIGHT,SAME,MIRROR,STRANGE
value_json_len: 0:0.1,1-100:0.2,100-1000:0.5,10000-20000:0.1,2147483000-2147484000:0.1,4294967000-4294968000:0.1,1000-1500
# todo substruct for SQL for load thread kind
# ANY -> x_thread_any not mandatory
# (re)creation, executed with system()
create_create: $ENV{IMACREATEMANY} $ENV{_imatest_port_rel}
# start many instances sequentially
server_start: $ENV{IMASTARTMANY} $ENV{_imatest_port_rel}
